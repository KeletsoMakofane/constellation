if (is.null(project_clean_pre$PI_IDS)) project_clean_pre$PI_IDS <- NA
if (is.null(project_clean_pre$PI_NAMEs)) project_clean_pre$PI_NAMEs <- NA
if (is.null(project_clean_pre$CORE_PROJECT_NUM)) project_clean_pre$CORE_PROJECT_NUM <- NA
project_clean <- project_clean_pre %>%
dplyr::mutate(SUBPROJECT_ID = ifelse(is.na(SUBPROJECT_ID), 0, SUBPROJECT_ID)) %>%
dplyr::mutate(id_project = paste(CORE_PROJECT_NUM, FY, SUBPROJECT_ID, sep = "_")) %>%
dplyr::mutate(title = PROJECT_TITLE,
year = FY,
indirect_cost = INDIRECT_COST_AMT,
direct_cost = DIRECT_COST_AMT,
total_cost = TOTAL_COST,
total_cost_subproject = TOTAL_COST_SUB_PROJECT,
id_organization = ORG_IPF_CODE,
name_organization = ORG_NAME,
city_organization = ORG_CITY,
city_country = ORG_COUNTRY,
id_investigator = PI_IDS,
name_investigator = PI_NAMEs,
core_project_number = CORE_PROJECT_NUM)
project_nodes <- project_clean %>%
dplyr::select(id_project, title, year, indirect_cost, direct_cost, total_cost, total_cost_subproject) %>%
unique() %>%
dplyr::group_by(id_project) %>%
dplyr::summarize(title = first(title),
year = first(year),
indirect_cost = first_valid(indirect_cost),
direct_cost = first_valid(direct_cost),
total_cost = first_valid(total_cost),
total_cost_subproject = first_valid(total_cost_subproject)) %>%
mutate(across(contains("cost"), function(x) ifelse(is.na(x), 0, x)))
organization_project_info <- project_clean %>%
dplyr::select(id_organization, name_organization, city_organization, city_country, id_project) %>%
unique() %>%
dplyr::group_by(id_organization) %>%
dplyr::mutate(name_organization = first_valid(name_organization), city_organization = first_valid(city_organization), city_country = first_valid(city_country)) %>%
dplyr::ungroup() %>%
dplyr::group_by(name_organization) %>%
dplyr::mutate(id_organization = first_valid(id_organization),
city_organization = first_valid(city_organization),
city_country = first_valid(city_country)) %>%
dplyr::ungroup() %>%
dplyr::mutate(name_organization = ifelse(is.na(name_organization), id_organization, name_organization),
id_organization = ifelse(is.na(id_organization), digest::digest2int(as.character(id_organization)), id_organization))
organization_nodes <- organization_project_info %>%
dplyr::select(id_organization, name_organization, city_organization) %>%
dplyr::group_by(id_organization) %>%
dplyr::summarize(name_organization = first_valid(name_organization), city_organization = first_valid(city_organization) )
investigator_pre <- project_clean %>%
dplyr::select(id_investigator, name_investigator, id_project) %>%
dplyr::mutate(id_investigator = str_remove(id_investigator, fixed("(contact)")), name_investigator = str_remove(name_investigator, fixed("(contact)"))) %>%
dplyr::mutate(id_investigator = str_split(id_investigator, ";"),
name_investigator = str_split(name_investigator, ";"))
investigator_nodes <- purrr::map2(investigator_pre$id_investigator,  investigator_pre$name_investigator, function(x, y) {data.frame(id_investigator = x, name_investigator = y)}) %>%
bind_rows() %>%
dplyr::filter(trimws(id_investigator) != "" & trimws(name_investigator) != "")
investigator_project_edges <- purrr::map2(investigator_pre$id_investigator,  investigator_pre$id_project, function(x, y) {data.frame(id_investigator = x, id_project = y)}) %>%
bind_rows() %>%
dplyr::filter(trimws(id_project) != "" & trimws(id_investigator) != "")
organization_project_edges <- organization_project_info %>%
dplyr::select(id_organization, id_project) %>%
drop_na() %>%
dplyr::filter(id_organization != "NA" & id_organization != "" & id_project != "NA" & id_project != "") %>%
unique()
project_subproject_edges <- project_clean %>%
dplyr::select(id_project, core_project_number, year) %>%
dplyr::mutate(id_subproject = paste(core_project_number, year, "0", sep = "_")) %>%
unique() %>%
dplyr::filter(id_project != id_subproject) %>%
dplyr::select(id_project, id_subproject)
write.csv(project_nodes, paste0(clean.data.directory, "project_nodes_", i, ".csv"))
write.csv(organization_nodes, paste0(clean.data.directory, "organization_nodes_", i, ".csv"))
write.csv(investigator_nodes, paste0(clean.data.directory, "investigator_nodes_", i, ".csv"))
write.csv(investigator_project_edges, paste0(clean.data.directory, "investigator_project_edges_", i, ".csv"))
write.csv(organization_project_edges, paste0(clean.data.directory, "organization_project_edges_", i, ".csv"))
write.csv(project_subproject_edges, paste0(clean.data.directory, "project_subproject_edges_", i, ".csv"))
rm(project_nodes)
rm(organization_nodes)
rm(investigator_nodes)
rm(investigator_project_edges)
rm(organization_project_edges)
rm(project_subproject_edges)
print(paste(i, "of", length(filenames_proj)))
})
}
indices <- seq_along(filenames_proj)
for (i in indices){
get_funding_data(i)
}
library(here)
library(tidyverse)
download_pubmed <- FALSE
download_funding <- TRUE
download_citations <- FALSE
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
############ Functions #################
first_valid <- function(vec){
if (all(is.na(vec))) return(NA)
vec[!is.na(vec)][1]
}
############ Directories #################
storage.data.directory    <- paste0(root.data.directory, "data_funding_raw/")
clean.data.directory      <- paste0(root.data.directory, "data_funding_clean/")
filenames <- list.files(storage.data.directory)
filenames_proj <- filenames %>%
{.[str_detect(., "_PRJ_")]}
filenames_link <- filenames %>%
{.[str_detect(., "_PUBLNK_")]}
link_file_list <- list()
############ Projec-Paper Links #################
for (i in seq_along(filenames_link)){
link_file_list[[i]] <- read.csv(paste0(storage.data.directory, filenames_link[i])) %>%
dplyr::rename(id_paper = PMID, id_project = PROJECT_NUMBER)
}
project_paper_edges <- link_file_list %>%
dplyr::bind_rows()
write.csv(project_paper_edges, paste0(clean.data.directory, "project_paper_edges.csv") )
############ Nodes and Edges #################
#indices <- seq_along(filenames_proj)
get_funding_data <- function(i){
try({
project_clean_pre <- read.csv(paste0(storage.data.directory, filenames_proj[i])) %>%
dplyr::filter(CORE_PROJECT_NUM %in% project_paper_edges$id_project)
if (dim(project_clean_pre)[1] == 0){
print(paste(i, "of", length(filenames_proj), "is empty"))
return(NULL)
}
if (is.null(project_clean_pre$INDIRECT_COST_AMT)) project_clean_pre$INDIRECT_COST_AMT <- NA
if (is.null(project_clean_pre$DIRECT_COST_AMT)) project_clean_pre$DIRECT_COST_AMT <- NA
if (is.null(project_clean_pre$TOTAL_COST)) project_clean_pre$TOTAL_COST <- NA
if (is.null(project_clean_pre$TOTAL_COST_SUB_PROJECT)) project_clean_pre$TOTAL_COST <- NA
if (is.null(project_clean_pre$ORG_IPF_CODE)) project_clean_pre$ORG_IPF_CODE <- NA
if (is.null(project_clean_pre$ORG_NAME)) project_clean_pre$ORG_NAME <- NA
if (is.null(project_clean_pre$ORG_CITY)) project_clean_pre$ORG_CITY <- NA
if (is.null(project_clean_pre$ORG_COUNTRY)) project_clean_pre$ORG_COUNTRY <- NA
if (is.null(project_clean_pre$PI_IDS)) project_clean_pre$PI_IDS <- NA
if (is.null(project_clean_pre$PI_NAMEs)) project_clean_pre$PI_NAMEs <- NA
if (is.null(project_clean_pre$CORE_PROJECT_NUM)) project_clean_pre$CORE_PROJECT_NUM <- NA
project_clean <- project_clean_pre %>%
dplyr::mutate(SUBPROJECT_ID = ifelse(is.na(SUBPROJECT_ID), 0, SUBPROJECT_ID)) %>%
dplyr::mutate(id_project = paste(CORE_PROJECT_NUM, FY, SUBPROJECT_ID, sep = "_")) %>%
dplyr::mutate(title = PROJECT_TITLE,
year = FY,
indirect_cost = INDIRECT_COST_AMT,
direct_cost = DIRECT_COST_AMT,
total_cost = TOTAL_COST,
total_cost_subproject = TOTAL_COST_SUB_PROJECT,
id_organization = ORG_IPF_CODE,
name_organization = ORG_NAME,
city_organization = ORG_CITY,
city_country = ORG_COUNTRY,
id_investigator = PI_IDS,
name_investigator = PI_NAMEs,
core_project_number = CORE_PROJECT_NUM)
project_nodes <- project_clean %>%
dplyr::select(id_project, title, year, indirect_cost, direct_cost, total_cost, total_cost_subproject) %>%
unique() %>%
dplyr::group_by(id_project) %>%
dplyr::summarize(title = first(title),
year = first(year),
indirect_cost = first_valid(indirect_cost),
direct_cost = first_valid(direct_cost),
total_cost = first_valid(total_cost),
total_cost_subproject = first_valid(total_cost_subproject)) %>%
mutate(across(contains("cost"), function(x) ifelse(is.na(x), 0, x)))
organization_project_info <- project_clean %>%
dplyr::select(id_organization, name_organization, city_organization, city_country, id_project) %>%
unique() %>%
dplyr::group_by(id_organization) %>%
dplyr::mutate(name_organization = first_valid(name_organization), city_organization = first_valid(city_organization), city_country = first_valid(city_country)) %>%
dplyr::ungroup() %>%
dplyr::group_by(name_organization) %>%
dplyr::mutate(id_organization = first_valid(id_organization),
city_organization = first_valid(city_organization),
city_country = first_valid(city_country)) %>%
dplyr::ungroup() %>%
dplyr::mutate(name_organization = ifelse(is.na(name_organization), id_organization, name_organization),
id_organization = ifelse(is.na(id_organization), digest::digest2int(as.character(id_organization)), id_organization))
organization_nodes <- organization_project_info %>%
dplyr::select(id_organization, name_organization, city_organization) %>%
dplyr::group_by(id_organization) %>%
dplyr::summarize(name_organization = first_valid(name_organization), city_organization = first_valid(city_organization) )
investigator_pre <- project_clean %>%
dplyr::select(id_investigator, name_investigator, id_project) %>%
dplyr::mutate(id_investigator = str_remove(id_investigator, fixed("(contact)")), name_investigator = str_remove(name_investigator, fixed("(contact)"))) %>%
dplyr::mutate(id_investigator = str_split(id_investigator, ";"),
name_investigator = str_split(name_investigator, ";"))
investigator_nodes <- purrr::map2(investigator_pre$id_investigator,  investigator_pre$name_investigator, function(x, y) {data.frame(id_investigator = x, name_investigator = y)}) %>%
bind_rows() %>%
dplyr::filter(trimws(id_investigator) != "" & trimws(name_investigator) != "")
investigator_project_edges <- purrr::map2(investigator_pre$id_investigator,  investigator_pre$id_project, function(x, y) {data.frame(id_investigator = x, id_project = y)}) %>%
bind_rows() %>%
dplyr::filter(trimws(id_project) != "" & trimws(id_investigator) != "")
organization_project_edges <- organization_project_info %>%
dplyr::select(id_organization, id_project) %>%
drop_na() %>%
dplyr::filter(id_organization != "NA" & id_organization != "" & id_project != "NA" & id_project != "") %>%
unique()
project_subproject_edges <- project_clean %>%
dplyr::select(id_project, core_project_number, year) %>%
dplyr::mutate(id_subproject = paste(core_project_number, year, "0", sep = "_")) %>%
unique() %>%
dplyr::filter(id_project != id_subproject) %>%
dplyr::select(id_project, id_subproject)
write.csv(project_nodes, paste0(clean.data.directory, "project_nodes_", i, ".csv"))
write.csv(organization_nodes, paste0(clean.data.directory, "organization_nodes_", i, ".csv"))
write.csv(investigator_nodes, paste0(clean.data.directory, "investigator_nodes_", i, ".csv"))
write.csv(investigator_project_edges, paste0(clean.data.directory, "investigator_project_edges_", i, ".csv"))
write.csv(organization_project_edges, paste0(clean.data.directory, "organization_project_edges_", i, ".csv"))
write.csv(project_subproject_edges, paste0(clean.data.directory, "project_subproject_edges_", i, ".csv"))
rm(project_nodes)
rm(organization_nodes)
rm(investigator_nodes)
rm(investigator_project_edges)
rm(organization_project_edges)
rm(project_subproject_edges)
print(paste(i, "of", length(filenames_proj)))
})
}
indices <- seq_along(filenames_proj)
for (i in indices){
get_funding_data(i)
}
trimws
length(NULL)
length(character(0))
list(data.frame(x =1, y = 1), NULL)
list(data.frame(x =1, y = 1), NULL) %>% bind_rows()
c(1,2,3,4)[[2]]
############## ADMIN ###############
pubmed_baseline <- "https://ftp.ncbi.nlm.nih.gov/pubmed/baseline/"
pubmed_update   <- "https://ftp.ncbi.nlm.nih.gov/pubmed/updatefiles/"
storage.data.directory    <- paste0(root.data.directory, "data_pubmed_raw/")
clean.data.directory      <- paste0(root.data.directory, "data_pubmed_clean/")
############## BASELINE ###############
file_names_base <- httr::GET(pubmed_baseline) %>%
xml2::read_html() %>%
xml2::xml_contents() %>%
xml2::xml_children() %>%
xml2::xml_find_all("//a") %>%
xml2::xml_text() %>%
{.[str_detect(., "xml")]} %>%
{.[!str_detect(., "md5")]}
download_source_base       <- paste0(pubmed_baseline, file_names_base)
download_destination_base  <- paste0(storage.data.directory, file_names_base)
cleaning_destination_base  <- paste0(clean.data.directory, file_names_base)
file_names_upd <- httr::GET(pubmed_update) %>%
xml2::read_html() %>%
xml2::xml_contents() %>%
xml2::xml_children() %>%
xml2::xml_find_all("//a") %>%
xml2::xml_text() %>%
{.[str_detect(., "xml")]} %>%
{.[!str_detect(., "md5")]}
library(here)
library(tidyverse)
download_pubmed <- FALSE
download_funding <- TRUE
download_citations <- FALSE
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
############## ADMIN ###############
pubmed_baseline <- "https://ftp.ncbi.nlm.nih.gov/pubmed/baseline/"
pubmed_update   <- "https://ftp.ncbi.nlm.nih.gov/pubmed/updatefiles/"
storage.data.directory    <- paste0(root.data.directory, "data_pubmed_raw/")
clean.data.directory      <- paste0(root.data.directory, "data_pubmed_clean/")
############## BASELINE ###############
file_names_base <- httr::GET(pubmed_baseline) %>%
xml2::read_html() %>%
xml2::xml_contents() %>%
xml2::xml_children() %>%
xml2::xml_find_all("//a") %>%
xml2::xml_text() %>%
{.[str_detect(., "xml")]} %>%
{.[!str_detect(., "md5")]}
download_source_base       <- paste0(pubmed_baseline, file_names_base)
download_destination_base  <- paste0(storage.data.directory, file_names_base)
cleaning_destination_base  <- paste0(clean.data.directory, file_names_base)
file_names_upd <- httr::GET(pubmed_update) %>%
xml2::read_html() %>%
xml2::xml_contents() %>%
xml2::xml_children() %>%
xml2::xml_find_all("//a") %>%
xml2::xml_text() %>%
{.[str_detect(., "xml")]} %>%
{.[!str_detect(., "md5")]}
lenght(file_names_upd)
length(file_names_upd)
############## ADMIN ###############
pubmed_baseline <- "https://ftp.ncbi.nlm.nih.gov/pubmed/baseline/"
pubmed_update   <- "https://ftp.ncbi.nlm.nih.gov/pubmed/updatefiles/"
storage.data.directory    <- paste0(root.data.directory, "data_pubmed_raw/")
clean.data.directory      <- paste0(root.data.directory, "data_pubmed_clean/")
############## BASELINE ###############
file_names_base <- httr::GET(pubmed_baseline) %>%
xml2::read_html() %>%
xml2::xml_contents() %>%
xml2::xml_children() %>%
xml2::xml_find_all("//a") %>%
xml2::xml_text() %>%
{.[str_detect(., "xml")]} %>%
{.[!str_detect(., "md5")]}
download_source_base       <- paste0(pubmed_baseline, file_names_base)
download_destination_base  <- paste0(storage.data.directory, file_names_base)
cleaning_destination_base  <- paste0(clean.data.directory, file_names_base)
file_names_upd <- httr::GET(pubmed_update) %>%
xml2::read_html() %>%
xml2::xml_contents() %>%
xml2::xml_children() %>%
xml2::xml_find_all("//a") %>%
xml2::xml_text() %>%
{.[str_detect(., "xml")]} %>%
{.[!str_detect(., "md5")]}
download_source_upd       <- paste0(pubmed_update, file_names_upd)
download_destination_upd  <- paste0(storage.data.directory, file_names_upd)
cleaning_destination_upd  <- paste0(clean.data.directory, file_names_upd)
file_names <- c(file_names_base, file_names_upd)
download_source       <- c(download_source_base, download_source_upd)
download_destination  <- c(download_destination_base, download_destination_base)
cleaning_destination  <- c(cleaning_destination_base, cleaning_destination_upd)
length(file_names)
clean.data.directory      <- paste0(root.data.directory, "data_pubmed_clean/")
filenames                 <- list.files(clean.data.directory)
filenames
filenames_authors <- filenames %>%
{.[str_detect("authors_")]}
filenames_authors <- filenames %>%
{.[str_detect(., "authors_")]}
filenames_authors
filenames_papers <- filenames %>%
{.[str_detect(., "papers_")]}
filenames_papers
filenames_authors <- filenames %>%
{.[str_detect(., "authors_")]} %>%
paste0(clean.data.directory)
filenames_authors
filenames_papers <- filenames %>%
{.[str_detect(., "papers_")]}  %>%
paste0(clean.data.directory)
filenames_papers
filenames_papers <- filenames %>%
{.[str_detect(., "papers_")]}  %>%
paste0(clean.data.directory, .)
filenames_papers
filenames_authors <- filenames %>%
{.[str_detect(., "authors_")]} %>%
paste0(clean.data.directory, .)
filenames_authors
library(here)
library(tidyverse)
download_pubmed <- FALSE
download_funding <- FALSE
download_citations <- FALSE
clean_pubmed <- TRUE
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
if (download_pubmed) source(paste0(root.working.directory, "download_pubmed.R"), verbose = TRUE)
if (download_funding) source(paste0(root.working.directory, "download_funding.R"), verbose = TRUE)
if (download_citations) source(paste0(root.working.directory, "download_citation_links.R"), verbose = TRUE)
if (clean_pubmed) source(paste0(root.working.directory, "clean_pubmed.R"), verbose = TRUE)
library(here)
library(tidyverse)
download_pubmed <- FALSE
download_funding <- FALSE
download_citations <- FALSE
clean_pubmed <- TRUE
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
if (download_pubmed) source(paste0(root.working.directory, "download_pubmed.R"), verbose = TRUE)
if (download_funding) source(paste0(root.working.directory, "download_funding.R"), verbose = TRUE)
if (download_citations) source(paste0(root.working.directory, "download_citation_links.R"), verbose = TRUE)
if (clean_pubmed) source(paste0(root.working.directory, "clean_pubmed.R"), verbose = TRUE)
clean.data.directory      <- paste0(root.data.directory, "data_funding_clean/")
final.data.directory      <- paste0(root.data.directory, "import/")
filenames                 <- list.files(clean.data.directory)
filenames
filenames_investigator_nodes <- filenames %>%
{.[str_detect(., "investigator_nodes_")]} %>%
paste0(clean.data.directory, .)
filenames_investigator_project_edges <- filenames %>%
{.[str_detect(., "investigator_project_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_organization_nodes <- filenames %>%
{.[str_detect(., "organization_nodes_")]} %>%
paste0(clean.data.directory, .)
filenames_organization_project_edges <- filenames %>%
{.[str_detect(., "organization_project_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_project_nodes <- filenames %>%
{.[str_detect(., "project_nodes_")]} %>%
paste0(clean.data.directory, .)
filenames_project_paper_edges <- filenames %>%
{.[str_detect(., "project_paper_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_project_subproject_edges <- filenames %>%
{.[str_detect(., "project_subproject_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_project_subproject_edges
filenames_project_paper_edges
filenames_project_subproject_edges
filenames_project_paper_edges <- filenames %>%
{.[str_detect(., "project_paper_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_project_paper_edges
filenames_project_nodes <- filenames %>%
{.[str_detect(., "project_nodes_")]} %>%
paste0(clean.data.directory, .)
filenames_project_nodes
filenames_organization_project_edges <- filenames %>%
{.[str_detect(., "organization_project_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_organization_project_edges
filenames_organization_nodes <- filenames %>%
{.[str_detect(., "organization_nodes_")]} %>%
paste0(clean.data.directory, .)
filenames_organization_nodes
filenames_investigator_project_edges <- filenames %>%
{.[str_detect(., "investigator_project_edges_")]} %>%
paste0(clean.data.directory, .)
filenames_investigator_project_edges
filenames_investigator_nodes <- filenames %>%
{.[str_detect(., "investigator_nodes_")]} %>%
paste0(clean.data.directory, .)
filenames_investigator_nodes
(file.exists(paste0(final.data.directory, "investigator_nodes.csv")))
library(here)
library(tidyverse)
download_pubmed <- FALSE
download_funding <- FALSE
download_citations <- FALSE
clean_pubmed <- FALSE
clean_funding <- TRUE
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
if (download_pubmed) source(paste0(root.working.directory, "download_pubmed.R"), verbose = TRUE)
if (download_funding) source(paste0(root.working.directory, "download_funding.R"), verbose = TRUE)
if (download_citations) source(paste0(root.working.directory, "download_citation_links.R"), verbose = TRUE)
if (clean_pubmed) source(paste0(root.working.directory, "clean_pubmed.R"), verbose = TRUE)
if (clean_funding) source(paste0(root.working.directory, "clean_funding.R"), verbose = TRUE)
clean.data.directory      <- paste0(root.data.directory, "data_pubmed_clean/")
final.data.directory      <- paste0(root.data.directory, "import/")
filenames                 <- list.files(clean.data.directory)
filenames_authors <- filenames %>%
{.[str_detect(., "authors_")]} %>%
paste0(clean.data.directory, .)
filenames_papers <- filenames %>%
{.[str_detect(., "papers_")]}  %>%
paste0(clean.data.directory, .)
filenames_papers
filenames_papers <- filenames %>%
{.[str_detect(., "papers_")]}  %>%
paste0(clean.data.directory, .)
library(here)
library(tidyverse)
download_pubmed <- FALSE
download_funding <- FALSE
download_citations <- FALSE
clean_pubmed <- TRUE
clean_funding <- FALSE
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
clean.data.directory      <- paste0(root.data.directory, "data_pubmed_clean/")
final.data.directory      <- paste0(root.data.directory, "import/")
filenames                 <- list.files(clean.data.directory)
filenames_authors <- filenames %>%
{.[str_detect(., "authors_")]} %>%
paste0(clean.data.directory, .)
filenames_papers <- filenames %>%
{.[str_detect(., "papers_")]}  %>%
paste0(clean.data.directory, .)
filenames_authors
filenames_papers
filenames_authors <- filenames %>%
{.[str_detect(., "authors_")]} %>%
paste0(clean.data.directory, .)
filenames_authors
