dplyr::mutate(id_organization = paste0("org_", id_organization)) %>%
dplyr::group_by(id_organization) %>%
dplyr::summarize(across(everything(), first)) %>%
dplyr::filter(!is.na(id_organization)) %>%
dplyr::rename(`id:ID` = id_organization, name = name_organization, city = city_organization) %>%
dplyr::mutate(`:LABEL` = "Organization")   %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "organization_nodes.csv"),  append = (i != 1), col_names= FALSE)
write_csv(a %>% filter(FALSE), paste0(final.data.directory, "organization_nodes_headers.csv"), col_names= TRUE)
a <- read_csv(filenames_organization_project_edges[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_organization = as.numeric(id_organization), id_project = trimws(as.character(id_project))) %>%
dplyr::mutate(id_organization = paste0("org_", id_organization), id_project = trimws(as.character(id_project))) %>%
dplyr::filter(!is.na(id_organization) & !is.na(id_project) & id_project != "") %>%
dplyr::rename(`:START_ID` = id_organization, `:END_ID` = id_project) %>%
dplyr::mutate(`:TYPE` = "HOSTED")  %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "organization_project_edges.csv"),  append = (i != 1), col_names= FALSE)
write_csv(a %>% filter(FALSE), paste0(final.data.directory, "organization_project_edges_headers.csv"),   col_names= TRUE)
a <- read_csv(filenames_project_nodes[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_project = as.character(trimws(id_project))) %>%
dplyr::group_by(id_project) %>%
dplyr::summarise(across(everything(), first)) %>%
dplyr::filter(!is.na(id_project) & id_project != "") %>%
dplyr::rename(`id:ID` = id_project) %>%
dplyr::mutate(`:LABEL` = "Project")  %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "project_nodes.csv"),  append = (i != 1), col_names= FALSE)
write_csv(a %>% filter(FALSE), paste0(final.data.directory, "project_nodes_headers.csv"), col_names= TRUE)
a <- read_csv(filenames_project_paper_edges[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_paper = as.numeric(id_paper), id_project = trimws(as.character(id_project))) %>%
dplyr::mutate(id_paper = paste0("pap_", id_paper), id_project = trimws(as.character(id_project))) %>%
dplyr::filter(!is.na(id_paper) & !is.na(id_project) & id_project != "") %>%
dplyr::rename(`:START_ID` = id_project, `:END_ID` = id_paper) %>%
dplyr::mutate(`:TYPE` = "SUPPORTED")  %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "project_paper_edges.csv"),  append = (i != 1), col_names= FALSE)
write_csv(a %>% filter(FALSE), paste0(final.data.directory, "project_paper_edges_headers.csv"),  col_names= TRUE)
a <- read_csv(filenames_project_subproject_edges[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_project = trimws(as.character(id_project)), id_subproject = trimws(as.character(id_subproject))) %>%
dplyr::filter(!is.na(id_project) & !is.na(id_subproject)) %>%
dplyr::rename(`:START_ID` = id_project, `:END_ID` = id_subproject) %>%
dplyr::mutate(`:TYPE` = "BEGAT")  %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "project_subproject_edges.csv"), append = (i != 1), col_names= FALSE)
write_csv(a %>% filter(FALSE), paste0(final.data.directory, "project_subproject_edges_headers.csv"),  col_names= TRUE)
a <- read_csv(paste0(clean.data.directory, "project_paper_edges.csv")) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_paper = as.numeric(id_paper), id_project = trimws(as.character(id_project))) %>%
dplyr::filter(!is.na(id_paper) & !is.na(id_project) & id_project != "")   %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "project_paper_edges.csv"))
try({
a <- read_csv(paste0(clean.data.directory, "project_paper_edges.csv")) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_paper = as.numeric(id_paper), id_project = trimws(as.character(id_project))) %>%
dplyr::filter(!is.na(id_paper) & !is.na(id_project) & id_project != "")   %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(a, paste0(final.data.directory, "project_paper_edges.csv"))
})
organization_project_edges           <- data.table::fread(paste0(final.data.directory, "organization_project_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
citation_edges           <- data.table::fread(paste0(final.data.directory, "citation_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
investigator_project_edges           <- data.table::fread(paste0(final.data.directory, "investigator_project_edges.csv"), header = FALSE)
investigator_project_edges
organization_project_edges           <- data.table::fread(paste0(final.data.directory, "organization_project_edges.csv"), header = FALSE)
organization_project_edges
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)
project_paper_edges
papers_nodes
b <- read_csv(filenames_author_paper_edges[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_paper = as.numeric(id_paper), name_author = trimws(as.character(name_author))) %>%
dplyr::mutate(id_paper = paste0("pap_", id_paper)) %>%
dplyr::filter(!is.na(id_paper) & !is.na(name_author) & name_author != "") %>%
dplyr::rename(`:START_ID` = name_author, `:END_ID` = id_paper) %>%
dplyr::mutate(`:TYPE` = "WROTE") %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(b, paste0(final.data.directory, "author_paper_edges.csv"), append = (i != 1), col_names= FALSE)
write_csv(b %>% filter(FALSE), paste0(final.data.directory, "author_paper_edges_headers.csv"), col_names= TRUE)
b
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)
project_paper_edges
b <- read_csv(filenames_author_paper_edges[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_paper = as.numeric(id_paper), name_author = trimws(as.character(name_author))) %>%
dplyr::mutate(id_paper = paste0("pap_", id_paper)) %>%
dplyr::filter(!is.na(id_paper) & !is.na(name_author) & name_author != "") %>%
dplyr::rename(`:START_ID` = name_author, `:END_ID` = id_paper) %>%
dplyr::mutate(`:TYPE` = "WROTE") %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
write_csv(b, paste0(final.data.directory, "author_paper_edges.csv"), append = (i != 1), col_names= FALSE)
write_csv(b %>% filter(FALSE), paste0(final.data.directory, "author_paper_edges_headers.csv"), col_names= TRUE)
b
a <- read_csv(filenames_project_paper_edges[i]) %>%
dplyr::mutate(across(everything(), as.character)) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, '"', '|'))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "'", "|"))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, ",", ";"))) %>%
dplyr::mutate(across(everything(), function(x) ifelse(is.na(x), "", x))) %>%
dplyr::mutate(id_paper = as.numeric(id_paper), id_project = trimws(as.character(id_project))) %>%
dplyr::mutate(id_paper = paste0("pap_", id_paper), id_project = trimws(as.character(id_project))) %>%
dplyr::filter(!is.na(id_paper) & !is.na(id_project) & id_project != "") %>%
dplyr::rename(`:START_ID` = id_project, `:END_ID` = id_paper) %>%
dplyr::mutate(`:TYPE` = "SUPPORTED")  %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:blank:]"," "))) %>%
dplyr::mutate(across(everything(), function(x) str_replace_all(x, "[:space:]"," ")))
a
write_csv(a, paste0(final.data.directory, "project_paper_edges.csv"),  append = (i != 1), col_names= FALSE)
write_csv(a %>% filter(FALSE), paste0(final.data.directory, "project_paper_edges_headers.csv"),  col_names= TRUE)
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
project_paper_edges
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)
project_paper_edges
project_nodes
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
project_paper_edges
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)
project_subproject_edges
project_subproject_edges_unique    <- unique(project_subproject_edges)
data.table::fwrite(project_subproject_edges_unique, paste0(final.data.directory, "project_subproject_edges.csv"), col.names = FALSE)
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)
project_subproject_edges
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)
str(project_subproject_edges)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)[V1 %in% project_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
str(project_subproject_edges)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)
str(project_subproject_edges)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)[V1 %in% project_nodes$V1][V2 %in% project_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
project_subproject_edges
str(project_subproject_edges)
View(project_subproject_edges)
View(papers_nodes)
View(project_nodes)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)
str(project_subproject_edges)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)[V1 %in% project_nodes$V1][V2 %in% project_nodes$V1]
str(project_subproject_edges)
View(project_subproject_edges)
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1]
author_paper_edges
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)
author_paper_edges
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][V2 %in% authors_nodes$V1]
author_paper_edges
citation_edges           <- data.table::fread(paste0(final.data.directory, "citation_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][V2 %in% papers_nodes$V1]
citation_edges
library(here)
library(tidyverse)
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
final.data.directory      <- paste0(root.data.directory, "import/")
papers_nodes           <- data.table::fread(paste0(final.data.directory, "papers.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3), V4 = first(V4), V5 = first(V5), V6 = first(V6), V7 = first(V7), V8 = first(V8), V9 = first(V9), V10 = first(V10), V11 = first(V11)), by=list(V1)]
papers_nodes_unique    <- unique(papers_nodes)
data.table::fwrite(papers_nodes_unique, paste0(final.data.directory, "papers.csv"), col.names = FALSE)
authors_nodes           <- data.table::fread(paste0(final.data.directory, "authors.csv"), header = FALSE)[, .(V2 = first(V2)), by=list(V1)]
authors_nodes_unique    <- unique(authors_nodes)
data.table::fwrite(authors_nodes_unique, paste0(final.data.directory, "authors.csv"), col.names = FALSE)
organizations_nodes           <- data.table::fread(paste0(final.data.directory, "organization_nodes.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3), V4 = first(V4)), by=list(V1)]
organizations_nodes_unique    <- unique(organizations_nodes)
data.table::fwrite(organizations_nodes_unique, paste0(final.data.directory, "organization_nodes.csv"), col.names = FALSE)
investigators_nodes           <- data.table::fread(paste0(final.data.directory, "investigator_nodes.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
investigators_nodes_unique    <- unique(investigators_nodes)
data.table::fwrite(investigators_nodes_unique, paste0(final.data.directory, "investigator_nodes.csv"), col.names = FALSE)
project_nodes           <- data.table::fread(paste0(final.data.directory, "project_nodes.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3), V4 = first(V4), V5 = first(V5), V6 = first(V6), V7 = first(V7), V8 = first(V8)), by=list(V1)]
project_nodes_unique    <- unique(project_nodes)
data.table::fwrite(project_nodes_unique, paste0(final.data.directory, "project_nodes.csv"), col.names = FALSE)
investigator_project_edges           <- data.table::fread(paste0(final.data.directory, "investigator_project_edges.csv"), header = FALSE)[V1 %in% investigators_nodes$V1][V2 %in% project_nodes$V1]
investigator_project_edges_unique    <- unique(investigator_project_edges)
data.table::fwrite(investigator_project_edges_unique, paste0(final.data.directory, "investigator_project_edges.csv"), col.names = FALSE)
organization_project_edges           <- data.table::fread(paste0(final.data.directory, "organization_project_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1]
organization_project_edges_unique    <- unique(organization_project_edges)
data.table::fwrite(organization_project_edges_unique, paste0(final.data.directory, "organization_project_edges.csv"), col.names = FALSE)
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
project_paper_edges_unique    <- unique(project_paper_edges)
data.table::fwrite(project_paper_edges_unique, paste0(final.data.directory, "project_paper_edges.csv"), col.names = FALSE)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)[V1 %in% project_nodes$V1][V2 %in% project_nodes$V1]
project_subproject_edges_unique    <- unique(project_subproject_edges)
data.table::fwrite(project_subproject_edges_unique, paste0(final.data.directory, "project_subproject_edges.csv"), col.names = FALSE)
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][V2 %in% authors_nodes$V1]
author_paper_edges_unique    <- unique(author_paper_edges)
data.table::fwrite(author_paper_edges_unique, paste0(final.data.directory, "author_paper_edges.csv"), col.names = FALSE)
citation_edges           <- data.table::fread(paste0(final.data.directory, "citation_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][V2 %in% papers_nodes$V1]
citation_edges_unique    <- unique(citation_edges)
data.table::fwrite(citation_edges_unique, paste0(final.data.directory, "citation_edges.csv"), col.names = FALSE)
project_paper_edges
library(here)
library(tidyverse)
local <- str_detect(here(), "keletsomakofane/Documents/")
if (local){
root.working.directory <- "/Users/keletsomakofane/Documents/_gitrepos/constellations/src/data_wrangling/"
root.data.directory    <- "/Users/keletsomakofane/Documents/_data/constellations/"
} else {
root.working.directory <- "~/shared_space/thesis_kem073/_gitrepos/constellations/src/data_wrangling/"
root.data.directory 	 <- "~/shared_space/kem073_proj/_data/constellations/"
}
final.data.directory      <- paste0(root.data.directory, "import/")
papers_nodes           <- data.table::fread(paste0(final.data.directory, "papers.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3), V4 = first(V4), V5 = first(V5), V6 = first(V6), V7 = first(V7), V8 = first(V8), V9 = first(V9), V10 = first(V10), V11 = first(V11)), by=list(V1)]
papers_nodes_unique    <- unique(papers_nodes)
data.table::fwrite(papers_nodes_unique, paste0(final.data.directory, "papers.csv"), col.names = FALSE)
authors_nodes           <- data.table::fread(paste0(final.data.directory, "authors.csv"), header = FALSE)[, .(V2 = first(V2)), by=list(V1)]
authors_nodes_unique    <- unique(authors_nodes)
data.table::fwrite(authors_nodes_unique, paste0(final.data.directory, "authors.csv"), col.names = FALSE)
organizations_nodes           <- data.table::fread(paste0(final.data.directory, "organization_nodes.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3), V4 = first(V4)), by=list(V1)]
organizations_nodes_unique    <- unique(organizations_nodes)
data.table::fwrite(organizations_nodes_unique, paste0(final.data.directory, "organization_nodes.csv"), col.names = FALSE)
investigators_nodes           <- data.table::fread(paste0(final.data.directory, "investigator_nodes.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
investigators_nodes_unique    <- unique(investigators_nodes)
data.table::fwrite(investigators_nodes_unique, paste0(final.data.directory, "investigator_nodes.csv"), col.names = FALSE)
project_nodes           <- data.table::fread(paste0(final.data.directory, "project_nodes.csv"), header = FALSE)[, .(V2 = first(V2), V3 = first(V3), V4 = first(V4), V5 = first(V5), V6 = first(V6), V7 = first(V7), V8 = first(V8)), by=list(V1)]
project_nodes_unique    <- unique(project_nodes)
data.table::fwrite(project_nodes_unique, paste0(final.data.directory, "project_nodes.csv"), col.names = FALSE)
investigator_project_edges           <- data.table::fread(paste0(final.data.directory, "investigator_project_edges.csv"), header = FALSE)[V1 %in% investigators_nodes$V1][V2 %in% project_nodes$V1]
investigator_project_edges_unique    <- unique(investigator_project_edges)
data.table::fwrite(investigator_project_edges_unique, paste0(final.data.directory, "investigator_project_edges.csv"), col.names = FALSE)
organization_project_edges           <- data.table::fread(paste0(final.data.directory, "organization_project_edges.csv"), header = FALSE)[V1 %in% organizations_nodes$V1][V2 %in% project_nodes$V1]
organization_project_edges_unique    <- unique(organization_project_edges)
data.table::fwrite(organization_project_edges_unique, paste0(final.data.directory, "organization_project_edges.csv"), col.names = FALSE)
project_paper_edges           <- data.table::fread(paste0(final.data.directory, "project_paper_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][, .(V2 = first(V2), V3 = first(V3)), by=list(V1)]
project_paper_edges_unique    <- unique(project_paper_edges)
data.table::fwrite(project_paper_edges_unique, paste0(final.data.directory, "project_paper_edges.csv"), col.names = FALSE)
project_subproject_edges           <- data.table::fread(paste0(final.data.directory, "project_subproject_edges.csv"), header = FALSE)[V1 %in% project_nodes$V1][V2 %in% project_nodes$V1]
project_subproject_edges_unique    <- unique(project_subproject_edges)
data.table::fwrite(project_subproject_edges_unique, paste0(final.data.directory, "project_subproject_edges.csv"), col.names = FALSE)
author_paper_edges           <- data.table::fread(paste0(final.data.directory, "author_paper_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][V2 %in% authors_nodes$V1]
author_paper_edges_unique    <- unique(author_paper_edges)
data.table::fwrite(author_paper_edges_unique, paste0(final.data.directory, "author_paper_edges.csv"), col.names = FALSE)
citation_edges           <- data.table::fread(paste0(final.data.directory, "citation_edges.csv"), header = FALSE)[V1 %in% papers_nodes$V1][V2 %in% papers_nodes$V1]
citation_edges_unique    <- unique(citation_edges)
data.table::fwrite(citation_edges_unique, paste0(final.data.directory, "citation_edges.csv"), col.names = FALSE)
install.packages("neo4jshell")
library(neo4r)
?neo4r
??neo4r
con <- neo4j_api$new(
url = "http://35.174.139.150:7474",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
library(neo4r)
con <- neo4j_api$new(
url = "http://35.174.139.150:7474",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "http://35.174.139.150:7474",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con$ping()
con <- neo4j_api$new(
url = "https://35.174.139.150:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con$ping()
con <- neo4j_api$new(
url = "https://35.174.139.150:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "bolt://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
url = "https://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con <- neo4j_api$new(
url = "https://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "https://graph.constellationsproject.app:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con$ping()
con <- neo4j_api$new(
url = "https://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con$ping()
con
con <- neo4j_api$new(
url = "http://graph.constellationsproject.app:7474",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con$ping()
con$get_constraints()
con <- neo4j_api$new(
url = "https://graph.constellationsproject.app:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con$get_constraints()
con <- neo4j_api$new(
url = "graph.constellationsproject.app:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "neo4j://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "neo4j+s://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "neo4j://graph.constellationsproject.app",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "neo4j://graph.constellationsproject.app:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "neo4j://graph.constellationsproject.app:7687",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
library(neo4r)
con <- neo4j_api$new(
url = "neo4j://graph.constellationsproject.app:7687",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "graph.constellationsproject.app:7687",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con <- neo4j_api$new(
url = "graph.constellationsproject.app:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con4$ping()
con$ping()
con$get_constraints()
str(con$get_constraints())
a <- con$get_constraints()
con <- neo4j_api$new(
url = "graph.constellationsproject.app:7473",
user = "neo4j",
password = "academy-recycle-system-valery-newton-357"
)
con
con$get_labels()
'MATCH (cloudAtlas {title: "Cloud Atlas"}) RETURN cloudAtlas' %>%
call_neo4j(con
)
'MATCH (people:Person) RETURN people.name LIMIT 10' %>%
call_neo4j(con)
library(dplyr)
'MATCH (people:Person) RETURN people.name LIMIT 10' %>%
call_neo4j(con)
install.packages("neo4jshell")
library(neo4jshell)
neo4j_local <- list(address = "bolt://graph.constellationsproject.app", uid = "neo4j", pwd = "academy-recycle-system-valery-newton-357")
neo4j_local
CQL <- 'MATCH (p1:Person {name: "Kevin Bacon"})-[:ACTED_IN]->(m:Movie)<-[:DIRECTED]-(p2:Person)
RETURN p2.name AS Name, m.title AS Title'
cypher_path <- path.expand("~/neo4j-community-4.0.4/bin/cypher-shell")
cypher_path
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- path.expand("~/cypher-shell")
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- path.expand("/bin/cypher-shell")
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- path.expand("bin/cypher-shell")
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
neo4j_local <- list(address = "neo4j+s://graph.constellationsproject.app", uid = "neo4j", pwd = "academy-recycle-system-valery-newton-357")
CQL <- 'MATCH (p1:Person {name: "Kevin Bacon"})-[:ACTED_IN]->(m:Movie)<-[:DIRECTED]-(p2:Person)
RETURN p2.name AS Name, m.title AS Title'
cypher_path <- path.expand("bin/cypher-shell")
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
neo4j_local <- list(address = "neo4j+s://graph.constellationsproject.app", uid = "neo4j", pwd = "academy-recycle-system-valery-newton-357")
CQL <- 'MATCH (p1:Person {name: "Kevin Bacon"})-[:ACTED_IN]->(m:Movie)<-[:DIRECTED]-(p2:Person)
RETURN p2.name AS Name, m.title AS Title'
cypher_path <- path.expand("cypher-shell")
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
path.expand("~/neo4j-community-3.5.8/import")
cypher_path <- path.expand("cypher-shell")
cypher_path
cypher_path <- path.expand("~bin/cypher-shell")
cypher_path
cypher_path <- path.expand("~bin/cypher-shell")
cypher_path
cypher_path <- path.expand("~/bin/cypher-shell")
cypher_path
?neo4j_query
neo4j_local <- list(address = "neo4j+s://graph.constellationsproject.app", uid = "neo4j", pwd = "academy-recycle-system-valery-newton-357")
CQL <- 'MATCH (p1:Person {name: "Kevin Bacon"})-[:ACTED_IN]->(m:Movie)<-[:DIRECTED]-(p2:Person)
RETURN p2.name AS Name, m.title AS Title'
neo4j_query(con = neo4j_local, qry = CQL)
cypher_path <- "/usr/local/bin"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
neo4j_local <- list(address = "neo4j+s://graph.constellationsproject.app", uid = "neo4j", pwd = "academy-recycle-system-valery-newton-357")
CQL <- 'MATCH (p1:Person {name: "Kevin Bacon"})-[:ACTED_IN]->(m:Movie)<-[:DIRECTED]-(p2:Person)
RETURN p2.name AS Name, m.title AS Title'
neo4j_query(con = neo4j_local, qry = CQL)
, shell_path = cypher_path
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- "/usr/local/bin/cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- "/usr/local/bin/cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- "cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- "./bin/cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
cypher_path <- "/opt/homebrew/bin/cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
neo4j_local <- list(address = "neo4j+s://graph.constellationsproject.app", uid = "neo4j", pwd = "academy-recycle-system-valery-newton-357")
CQL <- '
MATCH (n)
RETURN n
'
cypher_path <- "/opt/homebrew/bin/cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
CQL <- '
CREATE (:Person {name: "hello"})
'
cypher_path <- "/opt/homebrew/bin/cypher-shell"
neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
a <- neo4j_query(con = neo4j_local, qry = CQL, shell_path = cypher_path)
a
